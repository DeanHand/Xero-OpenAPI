{
  "openapi": "3.0.1",
  "info": {
    "title": "Cash Validation API",
    "description": "Cash Validation describes the degree of verifiability of the accounting record with respect to the information available from the bank statements connected to Xero.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.xero.com/finance.xro/1.0",
      "description": "Production URL"
    }
  ],
  "paths": {
    "/CashValidation": {
      "get": {
        "security":[
          {
            "OAuth2": ["finance.cashvalidation.read"]
          }
        ],
        "tags": [
          "CashValidation"
        ],
        "summary": "Get cash validation",
        "description": "Summarizes the total cash position for each account for an org",
        "parameters": [
          {
            "name": "balanceDate",
            "in": "query",
            "description": "date, yyyy-MM-dd \r\n\r\nIf no parameter is provided, the current date will be used.\r\n\r\nThe ‘balance date’ will return transactions based on the accounting date entered by the user.  Transactions before the balanceDate will be included.\r\nThe user has discretion as to which accounting period the transaction relates to.\r\n\r\nThe ‘balance date’  will control the latest maximum date of transactions included in the aggregate numbers.  Balance date does not affect the CurrentStatement object, as this will always return the most recent statement before asAtSystemDate (if specified)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asAtSystemDate",
            "in": "query",
            "description": "date, yyyy-MM-dd \r\n\r\nIf no parameter is provided, the current date will be used.\r\n\r\nThe ‘as at’ date will return transactions based on the  creation date.  It reflects the date the transactions were entered into Xero, not the accounting date.\r\nThe ‘as at’ date can not be overridden by the user.  This can be used to estimate a ‘historical frequency of reconciliation’.\r\n\r\nThe ‘as at’ date will affect the current statement in the response, as any candidate statements created after this date will be filtered out.  Thus the current statement returned will be the most recent statement prior to the specified ‘as at’ date.  Be aware that neither the begin date, nor the balance date, will affect the current statement.\r\n\r\nNote;  information is only presented when system architecture allows, meaning historical cash validation information will be an estimate. In addition, delete events are not aware of the ‘as at’ functionality in this endpoint, meaning that transactions deleted at the time the API is accessed will be considered to always have been deleted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "date, yyyy-MM-dd \r\n\r\nIf no parameter is provided, the aggregate results will be drawn from the user’s total history.\r\n\r\nThe ‘begin date’ will return transactions based on the accounting date entered by the user. Transactions after the beginDate will be included.\r\nThe user has discretion as to which accounting period the transaction relates to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Xero-Tenant-Id",
            "in": "header",
            "description": "Specifies the organisation Id for which the data will be returned.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Xero-Correlation-Id",
            "in": "header",
            "description": "Identifier to be associated with the request and response",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashValidationResponse"
                  }
                },
                "example": [
                  {
                    "accountId": "73151de8-3676-4887-a021-edec960dd537",
                    "statementBalance": {
                      "value": 100,
                      "type": "DEBIT"
                    },
                    "statementBalanceDate": "2021-03-01",
                    "bankStatement": {
                      "statementLines": {
                        "unreconciledAmountPos": 4577,
                        "unreconciledAmountNeg": -2367,
                        "unreconciledLines": 8,
                        "avgDaysUnreconciledPos": 112.265531,
                        "avgDaysUnreconciledNeg": 149.298992,
                        "earliestUnreconciledTransaction": "2019-03-01",
                        "latestUnreconciledTransaction": "2021-03-01",
                        "deletedAmount": 50,
                        "totalAmount": 189,
                        "dataSource": {
                          "directBankFeed": 0,
                          "indirectBankFeed": 0,
                          "fileUpload": 300,
                          "manual": -188,
                          "directBankFeedPos": 0,
                          "indirectBankFeedPos": 0,
                          "fileUploadPos": 2223,
                          "manualPos": 0,
                          "directBankFeedNeg": 0,
                          "indirectBankFeedNeg": 0,
                          "fileUploadNeg": -1890,
                          "manualNeg": -500,
                          "otherPos": 0,
                          "otherNeg": 0,
                          "other": 100
                        },
                        "earliestReconciledTransaction": "2019-03-01",
                        "latestReconciledTransaction": "2020-03-01",
                        "reconciledAmountPos": 0,
                        "reconciledAmountNeg": -288,
                        "reconciledLines": 3,
                        "totalAmountPos": 2245,
                        "totalAmountNeg": -1995
                      },
                      "currentStatement": {
                        "startDate": "2021-03-01",
                        "endDate": "2021-03-01",
                        "startBalance": 0,
                        "endBalance": 0,
                        "importedDateTimeUtc": "2021-03-09T05:22:14.3",
                        "importSourceType": "Manual"
                      }
                    },
                    "cashAccount": {
                      "unreconciledAmountPos": 1440,
                      "unreconciledAmountNeg": -1000,
                      "startingBalance": 0,
                      "accountBalance": 0,
                      "balanceCurrency": "NZD"
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                },
                "example": {
                  "type": "invalid-request",
                  "title": "InvalidRequest",
                  "status": 400,
                  "detail": "Invalid BalanceDate: '2020-01'"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "For more information visit https://developer.xero.com/documentation/oauth2/overview",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.xero.com/identity/connect/authorize",
            "tokenUrl": "https://identity.xero.com/connect/token",
            "scopes": {
              "finance.cashvalidation.read": "Grant read-only access to cash validation"
            }
          }
        }
      }
    },
    "schemas": {
      "BankStatementResponse": {
        "type": "object",
        "properties": {
          "statementLines": {
            "$ref": "#/components/schemas/StatementLinesResponse"
          },
          "currentStatement": {
            "$ref": "#/components/schemas/CurrentStatementResponse"
          }
        },
        "additionalProperties": false
      },
      "CashAccountResponse": {
        "type": "object",
        "properties": {
          "unreconciledAmountPos": {
            "type": "number",
            "description": "Total value of transactions in the journals which are not reconciled to bank statement lines, and have a positive (debit) value.",
            "format": "double"
          },
          "unreconciledAmountNeg": {
            "type": "number",
            "description": "Total value of transactions in the journals which are not reconciled to bank statement lines, and have a negative (credit) value.",
            "format": "double"
          },
          "startingBalance": {
            "type": "number",
            "description": "Starting (or historic) balance from the journals (manually keyed in by users on account creation - unverified).",
            "format": "double"
          },
          "accountBalance": {
            "type": "number",
            "description": "Current cash at bank accounting value from the journals.",
            "format": "double"
          },
          "balanceCurrency": {
            "type": "string",
            "description": "Currency which the cashAccount transactions relate to.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CashValidationResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The Xero identifier for an account",
            "format": "uuid"
          },
          "statementBalance": {
            "$ref": "#/components/schemas/StatementBalanceResponse"
          },
          "statementBalanceDate": {
            "type": "string",
            "description": "UTC Date when the last bank statement item was entered into Xero. This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "bankStatement": {
            "$ref": "#/components/schemas/BankStatementResponse"
          },
          "cashAccount": {
            "$ref": "#/components/schemas/CashAccountResponse"
          }
        },
        "additionalProperties": false
      },
      "CurrentStatementResponse": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Looking at the most recent bank statement, this field indicates the first date which transactions on this statement pertain to. This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Looking at the most recent bank statement, this field indicates the last date which transactions on this statement pertain to. This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "startBalance": {
            "type": "number",
            "description": "Looking at the most recent bank statement, this field indicates the balance before the transactions on the statement are applied (note, this is not always populated by the bank in every single instance (~10%)).",
            "format": "double"
          },
          "endBalance": {
            "type": "number",
            "description": "Looking at the most recent bank statement, this field indicates the balance after the transactions on the statement are applied (note, this is not always populated by the bank in every single instance (~10%)).",
            "format": "double"
          },
          "importedDateTimeUtc": {
            "type": "string",
            "description": "Looking at the most recent bank statement, this field indicates when the document was imported into Xero.  This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "importSourceType": {
            "type": "string",
            "description": "Looking at the most recent bank statement, this field indicates the source of the data (direct bank feed, indirect bank feed, file upload, or manual keying).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSourceResponse": {
        "type": "object",
        "properties": {
          "directBankFeed": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a direct bank feed in to Xero.   This gives an indication on the certainty of correctness of the data.",
            "format": "double"
          },
          "indirectBankFeed": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a indirect bank feed to Xero (usually via Yodlee).   This gives an indication on the certainty of correctness of the data.",
            "format": "double"
          },
          "fileUpload": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a CSV file upload in to Xero.   This gives an indication on the certainty of correctness of the data.",
            "format": "double"
          },
          "manual": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was manually keyed in to Xero.   This gives an indication on the certainty of correctness of the data.",
            "format": "double"
          },
          "directBankFeedPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a direct bank feed in to Xero.  This gives an indication on the certainty of correctness of the data.  Only positive transactions are included.",
            "format": "double"
          },
          "indirectBankFeedPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a indirect bank feed to Xero (usually via Yodlee).   This gives an indication on the certainty of correctness of the data. Only positive transactions are included.",
            "format": "double"
          },
          "fileUploadPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a CSV file upload in to Xero.   This gives an indication on the certainty of correctness of the data. Only positive transactions are included.",
            "format": "double"
          },
          "manualPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was manually keyed in to Xero.   This gives an indication on the certainty of correctness of the data. Only positive transactions are included.",
            "format": "double"
          },
          "directBankFeedNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a direct bank feed in to Xero.   This gives an indication on the certainty of correctness of the data.  Only negative transactions are included.",
            "format": "double"
          },
          "indirectBankFeedNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a indirect bank feed to Xero (usually via Yodlee).   This gives an indication on the certainty of correctness of the data.  Only negative transactions are included.",
            "format": "double"
          },
          "fileUploadNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was a CSV file upload in to Xero.   This gives an indication on the certainty of correctness of the data.  Only negative transactions are included.",
            "format": "double"
          },
          "manualNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was manually keyed in to Xero.   This gives an indication on the certainty of correctness of the data.  Only negative transactions are included.",
            "format": "double"
          },
          "otherPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was any other category.   This gives an indication on the certainty of correctness of the data.  Only positive transactions are included.",
            "format": "double"
          },
          "otherNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was any other category.   This gives an indication on the certainty of correctness of the data.  Only negative transactions are included.",
            "format": "double"
          },
          "other": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the source of the data was any other category.   This gives an indication on the certainty of correctness of the data.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Problem": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProblemType"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemType": {
        "enum": [
          "NotSet",
          "invalid-request",
          "invalid-application",
          "internal-error",
          "operation-canceled"
        ],
        "type": "string"
      },
      "StatementBalanceResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Total closing balance of the account. This includes both reconciled and unreconciled bank statement lines. The closing balance will always be represented as a positive number, with it’s debit/credit status defined in the statementBalanceDebitCredit field.",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "The DEBIT or CREDIT status of the account. Cash accounts in credit have a negative balance.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatementLinesResponse": {
        "type": "object",
        "properties": {
          "unreconciledAmountPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where both the reconciled flag is set to FALSE, and the amount is positive.",
            "format": "double"
          },
          "unreconciledAmountNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where both the reconciled flag is set to FALSE, and the amount is negative.",
            "format": "double"
          },
          "unreconciledLines": {
            "type": "integer",
            "description": "Count of all statement lines where the reconciled flag is set to FALSE.",
            "format": "int32"
          },
          "avgDaysUnreconciledPos": {
            "type": "number",
            "description": "Sum-product of age of statement line in days multiplied by transaction amount, divided by the sum of transaction amount - in for those statement lines in which the reconciled flag is set to FALSE, and the amount is positive. Provides an indication of the age of unreconciled transactions.",
            "format": "double"
          },
          "avgDaysUnreconciledNeg": {
            "type": "number",
            "description": "Sum-product of age of statement line in days multiplied by transaction amount, divided by the sum of transaction amount - in for those statement lines in which the reconciled flag is set to FALSE, and the amount is negative. Provides an indication of the age of unreconciled transactions.",
            "format": "double"
          },
          "earliestUnreconciledTransaction": {
            "type": "string",
            "description": "UTC Date which is the earliest transaction date of a statement line for which the reconciled flag is set to FALSE.  This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "latestUnreconciledTransaction": {
            "type": "string",
            "description": "UTC Date which is the latest transaction date of a statement line for which the reconciled flag is set to FALSE.  This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "deletedAmount": {
            "type": "number",
            "description": "Sum of the amounts of all deleted statement lines.  Transactions may be deleted due to duplication or otherwise.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines.  This is used as a metric of comparison to the unreconciled figures above.",
            "format": "double"
          },
          "dataSource": {
            "$ref": "#/components/schemas/DataSourceResponse"
          },
          "earliestReconciledTransaction": {
            "type": "string",
            "description": "UTC Date which is the earliest transaction date of a statement line for which the reconciled flag is set to TRUE.  This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "latestReconciledTransaction": {
            "type": "string",
            "description": "UTC Date which is the latest transaction date of a statement line for which the reconciled flag is set to TRUE.  This date is represented in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "reconciledAmountPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where both the reconciled flag is set to TRUE, and the amount is positive.",
            "format": "double"
          },
          "reconciledAmountNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where both the reconciled flag is set to TRUE, and the amount is negative.",
            "format": "double"
          },
          "reconciledLines": {
            "type": "integer",
            "description": "Count of all statement lines where the reconciled flag is set to TRUE",
            "format": "int32"
          },
          "totalAmountPos": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the amount is positive",
            "format": "double"
          },
          "totalAmountNeg": {
            "type": "number",
            "description": "Sum of the amounts of all statement lines where the amount is negative.",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
